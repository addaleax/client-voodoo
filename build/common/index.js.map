{"version":3,"sources":["common/index.js","common/index.ts"],"names":[],"mappings":"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","file":"common/index.js","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, Promise, generator) {\n    return new Promise(function (resolve, reject) {\n        generator = generator.call(thisArg, _arguments);\n        function cast(value) { return value instanceof Promise && value.constructor === Promise ? value : new Promise(function (resolve) { resolve(value); }); }\n        function onfulfill(value) { try { step(\"next\", value); } catch (e) { reject(e); } }\n        function onreject(value) { try { step(\"throw\", value); } catch (e) { reject(e); } }\n        function step(verb, value) {\n            var result = generator[verb](value);\n            result.done ? resolve(result.value) : cast(result.value).then(onfulfill, onreject);\n        }\n        step(\"next\", void 0);\n    });\n};\nvar fs = require('fs');\nlet Bluebird = require('bluebird');\nlet mkdirp = Bluebird.promisify(require('mkdirp'));\nlet fsUnlink = Bluebird.promisify(fs.unlink);\nlet fsExists = function (path) {\n    return new Promise(function (resolve) {\n        fs.exists(path, resolve);\n    });\n};\nlet fsReadFile = Bluebird.promisify(fs.readFile);\nlet fsWriteFile = Bluebird.promisify(fs.writeFile);\nlet chmod = Bluebird.promisify(fs.chmod);\nlet fsStat = Bluebird.promisify(fs.stat);\nlet fsCopy = function (from, to) {\n    return __awaiter(this, void 0, Promise, function* () {\n        return new Promise((resolve, reject) => {\n            let destStream = fs.createWriteStream(to);\n            destStream\n                .on('finish', resolve)\n                .on('error', reject);\n            fs.createReadStream(from).pipe(destStream);\n        });\n    });\n};\nlet fsReadDir = Bluebird.promisify(fs.readdir);\nlet fsReadDirRecursively = Bluebird.promisify(require('recursive-readdir'));\nexports.default = {\n    mkdirp: mkdirp,\n    fsUnlink: fsUnlink,\n    fsExists: fsExists,\n    fsReadFile: fsReadFile,\n    fsWriteFile: fsWriteFile,\n    chmod: chmod,\n    fsStat: fsStat,\n    fsCopy: fsCopy,\n    fsReadDir: fsReadDir,\n    fsReadDirRecursively: fsReadDirRecursively,\n};\n","import * as fs from 'fs';\nlet Bluebird = require( 'bluebird' );\n\nlet mkdirp: ( path: string, mode?: string ) => Promise<boolean> = Bluebird.promisify( require( 'mkdirp' ) );\nlet fsUnlink: ( path: string ) => Promise<NodeJS.ErrnoException> = Bluebird.promisify( fs.unlink );\nlet fsExists = function( path: string ): Promise<boolean>\n{\n\treturn new Promise<boolean>( function( resolve )\n\t{\n\t\tfs.exists( path, resolve );\n\t} );\n};\nlet fsReadFile: ( path: string, encoding?: string ) => Promise<string> = Bluebird.promisify( fs.readFile );\nlet fsWriteFile: ( path: string, data: string ) => Promise<string> = Bluebird.promisify( fs.writeFile );\nlet chmod:( path: string, mode: string | number ) => Promise<void> = Bluebird.promisify( fs.chmod );\nlet fsStat: ( path: string ) => Promise<fs.Stats> = Bluebird.promisify( fs.stat );\nlet fsCopy = async function( from: string, to: string )\n{\n\treturn new Promise<boolean>( ( resolve, reject ) =>\n\t{\n\t\tlet destStream = fs.createWriteStream( to );\n\t\tdestStream\n\t\t\t.on( 'finish', resolve )\n\t\t\t.on( 'error', reject );\n\n\t\tfs.createReadStream( from ).pipe( destStream );\n\t} );\n};\nlet fsReadDir: ( path: string ) => Promise<string[]> = Bluebird.promisify( fs.readdir );\nlet fsReadDirRecursively: ( path: string ) => Promise<string[]> = Bluebird.promisify( require( 'recursive-readdir' ) );\n\nexport default {\n\tmkdirp: mkdirp,\n\tfsUnlink: fsUnlink,\n\tfsExists: fsExists,\n\tfsReadFile: fsReadFile,\n\tfsWriteFile: fsWriteFile,\n\tchmod: chmod,\n\tfsStat: fsStat,\n\tfsCopy: fsCopy,\n\tfsReadDir: fsReadDir,\n\tfsReadDirRecursively: fsReadDirRecursively,\n};"],"sourceRoot":"../../src/"}