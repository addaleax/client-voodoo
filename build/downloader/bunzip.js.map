{"version":3,"sources":["downloader/bunzip.js","downloader/bunzip.ts"],"names":["stream"],"mappings":";;AAAA,IAAI,SAAS,GAAG,AAAC,aAAQ,UAAK,SAAS,IAAK,UAAU,OAAO,EAAE,UAAU,EAAE,OAAO,EAAE,SAAS,EAAE;AAC3F,WAAO,IAAI,OAAO,CAAC,UAAU,OAAO,EAAE,MAAM,EAAE;AAC1C,iBAAS,GAAG,SAAS,CAAC,IAAI,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;AAChD,iBAAS,IAAI,CAAC,KAAK,EAAE;AAAE,mBAAO,KAAK,YAAY,OAAO,IAAI,KAAK,CAAC,WAAW,KAAK,OAAO,GAAG,KAAK,GAAG,IAAI,OAAO,CAAC,UAAU,OAAO,EAAE;AAAE,uBAAO,CAAC,KAAK,CAAC,CAAC;aAAE,CAAC,CAAC;SAAE;AACxJ,iBAAS,SAAS,CAAC,KAAK,EAAE;AAAE,gBAAI;AAAE,oBAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;aAAE,CAAC,OAAO,CAAC,EAAE;AAAE,sBAAM,CAAC,CAAC,CAAC,CAAC;aAAE;SAAE;AACnF,iBAAS,QAAQ,CAAC,KAAK,EAAE;AAAE,gBAAI;AAAE,oBAAI,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;aAAE,CAAC,OAAO,CAAC,EAAE;AAAE,sBAAM,CAAC,CAAC,CAAC,CAAC;aAAE;SAAE;AACnF,iBAAS,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE;AACvB,gBAAI,MAAM,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC;AACpC,kBAAM,CAAC,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;SACtF;AACD,YAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC;KACxB,CAAC,CAAC;CACN,CAAC;ACZF,IAAA,QAAA,GAAA,OAAA,CAA4B,QAAQ,CAAC,CAAA;AAErC,IAAI,SAAS,GAAG,OAAO,CAAE,WAAW,CAAE,CAAC;AACvC,IAAI,aAAa,GAAG,OAAO,CAAE,WAAW,CAAE,CAAC;AAQ3C,SAAA,MAAA,CAAgC,OAA4E,EAAE,aAA8B,EAAA;AAE3IA,QAAIA,KAAKA,GAAGA,IAAIA,QAAAA,CAAAA,WAAWA,EAAEA,CAACA;AAC9BA,QAAIA,KAAKA,GAAGA,IAAIA,QAAAA,CAAAA,WAAWA,EAAEA,CAACA;AAE9BA,iBAAaA,CAACA,YAAYA,CAAEA,KAAKA,EAAEA,KAAKA,EAAEA,aAAaA,EAAEA,OAAOA,CAAEA,CAACA;AACnEA,WAAOA,SAASA,CAAEA,KAAKA,EAAEA,KAAKA,CAAEA,CAACA;CACjCA;AAPD,OAAA,CAAA,OAAA,GAAA,MAOC,CAAA","file":"downloader/bunzip.js","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, Promise, generator) {\n    return new Promise(function (resolve, reject) {\n        generator = generator.call(thisArg, _arguments);\n        function cast(value) { return value instanceof Promise && value.constructor === Promise ? value : new Promise(function (resolve) { resolve(value); }); }\n        function onfulfill(value) { try { step(\"next\", value); } catch (e) { reject(e); } }\n        function onreject(value) { try { step(\"throw\", value); } catch (e) { reject(e); } }\n        function step(verb, value) {\n            var result = generator[verb](value);\n            result.done ? resolve(result.value) : cast(result.value).then(onfulfill, onreject);\n        }\n        step(\"next\", void 0);\n    });\n};\nvar stream_1 = require('stream');\nlet duplexer2 = require('duplexer2');\nlet WrappedBunzip = require('seek-bzip');\nfunction stream(onChunk, resumeOptions) {\n    let pass1 = new stream_1.PassThrough();\n    let pass2 = new stream_1.PassThrough();\n    WrappedBunzip.decodeStream(pass1, pass2, resumeOptions, onChunk);\n    return duplexer2(pass1, pass2);\n}\nexports.default = stream;\n","import { PassThrough } from 'stream';\n\nlet duplexer2 = require( 'duplexer2' );\nlet WrappedBunzip = require( 'seek-bzip' );\n\nexport interface IResumeOptions\n{\n\tlevel: number;\n\tstreamCRC: number;\n}\n\nexport default function stream( onChunk: ( streamCRC: number, isFinalBlock: boolean, next: Function ) => any, resumeOptions?: IResumeOptions )\n{\n\tlet pass1 = new PassThrough();\n\tlet pass2 = new PassThrough();\n\n\tWrappedBunzip.decodeStream( pass1, pass2, resumeOptions, onChunk );\n\treturn duplexer2( pass1, pass2 );\n}"],"sourceRoot":"../../src/"}