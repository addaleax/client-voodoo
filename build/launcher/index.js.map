{"version":3,"sources":["launcher/index.js","launcher/index.ts"],"names":["Launcher","Launcher.launch","Launcher.attach","LaunchHandle","LaunchHandle.constructor","LaunchHandle.findLaunchOption","LaunchHandle.ensureExecutable","LaunchHandle.start","LaunchHandle.startWindows","LaunchHandle.startLinux","LaunchHandle.startMac","LaunchHandle.build","LaunchHandle.file","LaunchHandle.promise","LaunchInstanceHandle","LaunchInstanceHandle.constructor","LaunchInstanceHandle.tick","LaunchInstanceHandle.pid"],"mappings":"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","file":"launcher/index.js","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, Promise, generator) {\n    return new Promise(function (resolve, reject) {\n        generator = generator.call(thisArg, _arguments);\n        function cast(value) { return value instanceof Promise && value.constructor === Promise ? value : new Promise(function (resolve) { resolve(value); }); }\n        function onfulfill(value) { try { step(\"next\", value); } catch (e) { reject(e); } }\n        function onreject(value) { try { step(\"throw\", value); } catch (e) { reject(e); } }\n        function step(verb, value) {\n            var result = generator[verb](value);\n            result.done ? resolve(result.value) : cast(result.value).then(onfulfill, onreject);\n        }\n        step(\"next\", void 0);\n    });\n};\nvar path = require('path');\nvar events_1 = require('events');\nvar childProcess = require('child_process');\nvar common_1 = require('../common');\nvar pid_finder_1 = require('./pid-finder');\nlet plist = require('plist');\nclass Launcher {\n    static launch(build, os, arch, options) {\n        return new LaunchHandle(build, os, arch, options);\n    }\n    static attach(pid, pollInterval) {\n        return __awaiter(this, void 0, Promise, function* () {\n            return new LaunchInstanceHandle(pid, pollInterval);\n        });\n    }\n}\nexports.Launcher = Launcher;\nclass LaunchHandle {\n    constructor(_build, _os, _arch, options) {\n        this._build = _build;\n        this._os = _os;\n        this._arch = _arch;\n        options = options || {\n            pollInterval: 1000,\n        };\n        this._promise = this.start(options.pollInterval);\n    }\n    get build() {\n        return this._build;\n    }\n    get file() {\n        return this._file;\n    }\n    get promise() {\n        return this._promise;\n    }\n    findLaunchOption() {\n        let result = null;\n        for (let launchOption of this._build.launch_options) {\n            let lOs = launchOption.os.split('_');\n            if (lOs.length === 1) {\n                lOs.push('32');\n            }\n            if (lOs[0] === this._os) {\n                if (lOs[1] === this._arch) {\n                    return launchOption;\n                }\n                result = launchOption;\n            }\n        }\n        return result;\n    }\n    ensureExecutable(file, stat) {\n        return __awaiter(this, void 0, Promise, function* () {\n            if (!stat) {\n                stat = yield common_1.default.fsStat(file);\n            }\n            // Make sure the file is executable\n            let mode = stat.mode;\n            if (!mode) {\n                throw new Error('Can\\'t determine if the file is executable by the current user.');\n            }\n            let uid = stat.uid;\n            let gid = stat.gid;\n            if (!(mode & parseInt('0001', 8)) &&\n                !(mode & parseInt('0010', 8)) && process.getgid && gid === process.getgid() &&\n                !(mode & parseInt('0100', 8)) && process.getuid && uid === process.getuid()) {\n                // Ensure that the main launcher file is executable.\n                yield common_1.default.chmod(file, '0777');\n            }\n        });\n    }\n    start(pollInterval) {\n        return __awaiter(this, void 0, Promise, function* () {\n            let launchOption = this.findLaunchOption();\n            if (!launchOption) {\n                throw new Error('Can\\'t find valid launch options for the given os/arch');\n            }\n            var executablePath = launchOption.executable_path.replace(/\\//, path.sep);\n            this._file = path.join(this._build.install_dir, executablePath);\n            // If the destination already exists, make sure its valid.\n            if (!(yield common_1.default.fsExists(this._file))) {\n                throw new Error('Can\\'t launch because the file doesn\\'t exist.');\n            }\n            // Make sure the destination is a file\n            // On mac it can be a folder as long as its a bundle..\n            let stat = yield common_1.default.fsStat(this._file);\n            switch (process.platform) {\n                case 'win32':\n                    return this.startWindows(stat, pollInterval);\n                case 'linux':\n                    return this.startLinux(stat, pollInterval);\n                case 'darwin':\n                    return this.startMac(stat, pollInterval);\n                default:\n                    throw new Error('What potato are you running on? Detected platform: ' + process.platform);\n            }\n        });\n    }\n    startWindows(stat, pollInterval) {\n        return __awaiter(this, void 0, Promise, function* () {\n            if (!stat.isFile()) {\n                throw new Error('Can\\'t launch because the file isn\\'t valid.');\n            }\n            let child = childProcess.spawn(this._file, [], {\n                cwd: path.dirname(this._file),\n                detached: true,\n            });\n            let pid = child.pid;\n            child.unref();\n            return new LaunchInstanceHandle(pid, pollInterval);\n        });\n    }\n    startLinux(stat, pollInterval) {\n        return __awaiter(this, void 0, Promise, function* () {\n            if (!stat.isFile()) {\n                throw new Error('Can\\'t launch because the file isn\\'t valid.');\n            }\n            yield this.ensureExecutable(this._file, stat);\n            let child = childProcess.spawn(this._file, [], {\n                cwd: path.dirname(this._file),\n                detached: true,\n            });\n            let pid = child.pid;\n            child.unref();\n            return new LaunchInstanceHandle(pid, pollInterval);\n        });\n    }\n    startMac(stat, pollInterval) {\n        return __awaiter(this, void 0, Promise, function* () {\n            let pid;\n            if (stat.isFile()) {\n                yield this.ensureExecutable(this._file, stat);\n                let child = childProcess.spawn(this._file, [], {\n                    cwd: path.dirname(this._file),\n                    detached: true,\n                });\n                pid = child.pid;\n                child.unref();\n            }\n            else {\n                if (!this._file.toLowerCase().endsWith('.app')) {\n                    throw new Error('That doesn\\'t look like a valid Mac OS X bundle. Expecting .app folder');\n                }\n                let plistPath = path.join(this._file, 'Contents', 'Info.plist');\n                if (!(yield common_1.default.fsExists(plistPath))) {\n                    throw new Error('That doesn\\'t look like a valid Mac OS X bundle. Missing Info.plist file.');\n                }\n                let plistStat = yield common_1.default.fsStat(plistPath);\n                if (!plistStat.isFile()) {\n                    throw new Error('That doesn\\'t look like a valid Mac OS X bundle. Info.plist isn\\'t a valid file.');\n                }\n                let parsedPlist = plist(yield common_1.default.fsReadFile(plistPath, 'utf8'));\n                if (!parsedPlist) {\n                    throw new Error('That doesn\\'t look like a valid  Mac OS X bundle. Info.plist is not a valid plist file.');\n                }\n                let macosPath = path.join(this._file, 'Contents', 'MacOS');\n                if (!(yield common_1.default.fsExists(macosPath))) {\n                    throw new Error('That doesn\\'t look like a valid Mac OS X bundle. Missing MacOS directory.');\n                }\n                let macosStat = yield common_1.default.fsStat(macosPath);\n                if (!macosStat.isDirectory()) {\n                    throw new Error('That doesn\\'t look like a valid Mac OS X bundle. MacOS isn\\'t a valid directory.');\n                }\n                let baseName = path.basename(this._file);\n                let executableName = parsedPlist.CFBundleExecutable || baseName.substr(0, baseName.length - '.app'.length);\n                yield this.ensureExecutable(path.join(macosPath, executableName));\n                let child = childProcess.spawn('open ' + this._file, [], {\n                    cwd: path.dirname(this._file),\n                    detached: true,\n                });\n                pid = child.pid;\n                child.unref();\n            }\n            return new LaunchInstanceHandle(pid, pollInterval);\n        });\n    }\n}\nexports.LaunchHandle = LaunchHandle;\nclass LaunchInstanceHandle extends events_1.EventEmitter {\n    constructor(_pid, pollInterval) {\n        super();\n        this._pid = _pid;\n        this._interval = setInterval(() => this.tick(), pollInterval || 1000);\n    }\n    get pid() {\n        return this._pid;\n    }\n    tick() {\n        pid_finder_1.PidFinder.find(this._pid)\n            .then((result) => {\n            if (!result) {\n                throw new Error('Process doesn\\'t exist anymore');\n            }\n        })\n            .catch((err) => {\n            clearInterval(this._interval);\n            this.emit('end', err);\n        });\n    }\n}\nexports.LaunchInstanceHandle = LaunchInstanceHandle;\n","import * as fs from 'fs';\nimport * as path from 'path';\nimport { EventEmitter } from 'events';\nimport * as childProcess from 'child_process';\nimport * as os from 'os';\nimport * as _ from 'lodash';\nimport Common from '../common';\nimport { PidFinder } from './pid-finder';\nlet plist = require( 'plist' );\n\nexport interface ILaunchOptions\n{\n\tpollInterval: number;\n}\n\nexport abstract class Launcher\n{\n\tstatic launch( build: GameJolt.IGameBuild, os: string, arch: string, options?: ILaunchOptions ): LaunchHandle\n\t{\n\t\treturn new LaunchHandle( build, os, arch, options );\n\t}\n\n\tstatic async attach( pid: number, pollInterval?: number )\n\t{\n\t\treturn new LaunchInstanceHandle( pid, pollInterval );\n\t}\n}\n\nexport class LaunchHandle\n{\n\tprivate _promise: Promise<LaunchInstanceHandle>;\n\tprivate _file: string;\n\n\tconstructor( private _build: GameJolt.IGameBuild, private _os: string, private _arch: string, options?: ILaunchOptions )\n\t{\n\t\toptions = options || {\n\t\t\tpollInterval: 1000,\n\t\t};\n\n\t\tthis._promise = this.start( options.pollInterval );\n\t}\n\n\tget build()\n\t{\n\t\treturn this._build;\n\t}\n\n\tget file()\n\t{\n\t\treturn this._file;\n\t}\n\n\tget promise()\n\t{\n\t\treturn this._promise;\n\t}\n\n\tprivate findLaunchOption()\n\t{\n\t\tlet result: GameJolt.IGameBuildLaunchOptions = null;\n\t\tfor ( let launchOption of this._build.launch_options ) {\n\t\t\tlet lOs = launchOption.os.split( '_' );\n\t\t\tif ( lOs.length === 1 ) {\n\t\t\t\tlOs.push( '32' );\n\t\t\t}\n\t\t\tif ( lOs[0] === this._os ) {\n\t\t\t\tif ( lOs[1] === this._arch ) {\n\t\t\t\t\treturn launchOption;\n\t\t\t\t}\n\t\t\t\tresult = launchOption;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate async ensureExecutable( file: string, stat?: fs.Stats )\n\t{\n\t\tif ( !stat ) {\n\t\t\tstat = await Common.fsStat( file );\n\t\t}\n\t\t// Make sure the file is executable\n\t\tlet mode = stat.mode;\n\t\tif ( !mode ) {\n\t\t\tthrow new Error( 'Can\\'t determine if the file is executable by the current user.' );\n\t\t}\n\n\t\tlet uid = stat.uid;\n\t\tlet gid = stat.gid;\n\n\t\tif ( !( mode & parseInt( '0001', 8 ) ) &&\n\t\t\t\t!( mode & parseInt( '0010', 8 ) ) && process.getgid && gid === process.getgid() &&\n\t\t\t\t!( mode & parseInt( '0100', 8 ) ) && process.getuid && uid === process.getuid() ) {\n\n\t\t\t// Ensure that the main launcher file is executable.\n\t\t\tawait Common.chmod( file, '0777' );\n\t\t}\n\t}\n\n\tprivate async start( pollInterval: number )\n\t{\n\t\tlet launchOption = this.findLaunchOption();\n\t\tif ( !launchOption ) {\n\t\t\tthrow new Error( 'Can\\'t find valid launch options for the given os/arch' );\n\t\t}\n\n\t\tvar executablePath = launchOption.executable_path.replace( /\\//, path.sep );\n\t\tthis._file = path.join( this._build.install_dir, executablePath );\n\n\t\t// If the destination already exists, make sure its valid.\n\t\tif ( !(await Common.fsExists( this._file ) ) ) {\n\t\t\tthrow new Error( 'Can\\'t launch because the file doesn\\'t exist.' );\n\t\t}\n\n\t\t// Make sure the destination is a file\n\t\t// On mac it can be a folder as long as its a bundle..\n\t\tlet stat = await Common.fsStat( this._file );\n\n\t\tswitch ( process.platform ) {\n\t\t\tcase 'win32':\n\t\t\t\treturn this.startWindows( stat, pollInterval );\n\n\t\t\tcase 'linux':\n\t\t\t\treturn this.startLinux( stat, pollInterval );\n\n\t\t\tcase 'darwin':\n\t\t\t\treturn this.startMac( stat, pollInterval );\n\n\t\t\tdefault:\n\t\t\t\tthrow new Error( 'What potato are you running on? Detected platform: ' + process.platform );\n\t\t}\n\t}\n\n\tprivate async startWindows( stat: fs.Stats, pollInterval: number )\n\t{\n\t\tif ( !stat.isFile() ) {\n\t\t\tthrow new Error( 'Can\\'t launch because the file isn\\'t valid.' );\n\t\t}\n\n\t\tlet child = childProcess.spawn( this._file, [], {\n\t\t\tcwd: path.dirname( this._file ),\n\t\t\tdetached: true,\n\t\t} );\n\n\t\tlet pid = child.pid;\n\t\tchild.unref();\n\n\t\treturn new LaunchInstanceHandle( pid, pollInterval );\n\t}\n\n\tprivate async startLinux( stat: fs.Stats, pollInterval: number )\n\t{\n\t\tif ( !stat.isFile() ) {\n\t\t\tthrow new Error( 'Can\\'t launch because the file isn\\'t valid.' );\n\t\t}\n\n\t\tawait this.ensureExecutable( this._file, stat );\n\n\t\tlet child = childProcess.spawn( this._file, [], {\n\t\t\tcwd: path.dirname( this._file ),\n\t\t\tdetached: true,\n\t\t} );\n\n\t\tlet pid = child.pid;\n\t\tchild.unref();\n\n\t\treturn new LaunchInstanceHandle( pid, pollInterval );\n\t}\n\n\tprivate async startMac( stat: fs.Stats, pollInterval: number )\n\t{\n\t\tlet pid;\n\t\tif ( stat.isFile() ) {\n\n\t\t\tawait this.ensureExecutable( this._file, stat );\n\n\t\t\tlet child = childProcess.spawn( this._file, [], {\n\t\t\t\tcwd: path.dirname( this._file ),\n\t\t\t\tdetached: true,\n\t\t\t} );\n\n\t\t\tpid = child.pid;\n\t\t\tchild.unref();\n\t\t}\n\t\telse {\n\t\t\tif ( !this._file.toLowerCase().endsWith( '.app' ) ) {\n\t\t\t\tthrow new Error( 'That doesn\\'t look like a valid Mac OS X bundle. Expecting .app folder' );\n\t\t\t}\n\n\t\t\tlet plistPath = path.join( this._file, 'Contents', 'Info.plist' );\n\t\t\tif ( !( await Common.fsExists( plistPath ) ) ) {\n\t\t\t\tthrow new Error( 'That doesn\\'t look like a valid Mac OS X bundle. Missing Info.plist file.' );\n\t\t\t}\n\n\t\t\tlet plistStat = await Common.fsStat( plistPath );\n\t\t\tif ( !plistStat.isFile() ) {\n\t\t\t\tthrow new Error( 'That doesn\\'t look like a valid Mac OS X bundle. Info.plist isn\\'t a valid file.' );\n\t\t\t}\n\n\t\t\tlet parsedPlist = plist( await Common.fsReadFile( plistPath, 'utf8' ) );\n\t\t\tif ( !parsedPlist ) {\n\t\t\t\tthrow new Error( 'That doesn\\'t look like a valid  Mac OS X bundle. Info.plist is not a valid plist file.' );\n\t\t\t}\n\n\t\t\tlet macosPath = path.join( this._file, 'Contents', 'MacOS' );\n\t\t\tif ( !( await Common.fsExists( macosPath ) ) ) {\n\t\t\t\tthrow new Error( 'That doesn\\'t look like a valid Mac OS X bundle. Missing MacOS directory.' );\n\t\t\t}\n\n\t\t\tlet macosStat = await Common.fsStat( macosPath );\n\t\t\tif ( !macosStat.isDirectory() ) {\n\t\t\t\tthrow new Error( 'That doesn\\'t look like a valid Mac OS X bundle. MacOS isn\\'t a valid directory.' );\n\t\t\t}\n\n\t\t\tlet baseName = path.basename( this._file );\n\t\t\tlet executableName = parsedPlist.CFBundleExecutable || baseName.substr( 0, baseName.length - '.app'.length );\n\n\t\t\tawait this.ensureExecutable( path.join( macosPath, executableName ) );\n\n\t\t\tlet child = childProcess.spawn( 'open ' + this._file, [], {\n\t\t\t\tcwd: path.dirname( this._file ),\n\t\t\t\tdetached: true,\n\t\t\t} );\n\n\t\t\tpid = child.pid;\n\t\t\tchild.unref();\n\t\t}\n\n\t\treturn new LaunchInstanceHandle( pid, pollInterval );\n\t}\n}\n\nexport class LaunchInstanceHandle extends EventEmitter\n{\n\tprivate _interval: NodeJS.Timer;\n\n\tconstructor( private _pid: number, pollInterval?: number )\n\t{\n\t\tsuper();\n\t\tthis._interval = setInterval( () => this.tick(), pollInterval || 1000 );\n\t}\n\n\tget pid()\n\t{\n\t\treturn this._pid;\n\t}\n\n\ttick()\n\t{\n\t\tPidFinder.find( this._pid )\n\t\t\t.then( ( result ) =>\n\t\t\t{\n\t\t\t\tif ( !result ) {\n\t\t\t\t\tthrow new Error( 'Process doesn\\'t exist anymore' );\n\t\t\t\t}\n\t\t\t} )\n\t\t\t.catch( ( err ) =>\n\t\t\t{\n\t\t\t\tclearInterval( this._interval );\n\t\t\t\tthis.emit( 'end', err );\n\t\t\t} );\n\t}\n}\n"],"sourceRoot":"../../src/"}