{"version":3,"sources":["launcher/index.js","launcher/index.ts"],"names":["Launcher","Launcher.launch","LaunchHandle","LaunchHandle.constructor","LaunchHandle.start","LaunchHandle.file","LaunchHandle.promise"],"mappings":"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","file":"launcher/index.js","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, Promise, generator) {\n    return new Promise(function (resolve, reject) {\n        generator = generator.call(thisArg, _arguments);\n        function cast(value) { return value instanceof Promise && value.constructor === Promise ? value : new Promise(function (resolve) { resolve(value); }); }\n        function onfulfill(value) { try { step(\"next\", value); } catch (e) { reject(e); } }\n        function onreject(value) { try { step(\"throw\", value); } catch (e) { reject(e); } }\n        function step(verb, value) {\n            var result = generator[verb](value);\n            result.done ? resolve(result.value) : cast(result.value).then(onfulfill, onreject);\n        }\n        step(\"next\", void 0);\n    });\n};\nvar fs = require('fs');\nvar path = require('path');\nvar childProcess = require('child_process');\nlet Bluebird = require('bluebird');\nlet fsExists = function (path) {\n    return new Promise(function (resolve) {\n        fs.exists(path, resolve);\n    });\n};\nlet fsStat = Bluebird.promisify(fs.stat);\nlet fsChmod = Bluebird.promisify(fs.chmod);\nclass Launcher {\n    static launch(file) {\n        return new LaunchHandle(file);\n    }\n}\nexports.Launcher = Launcher;\nclass LaunchHandle {\n    constructor(_file) {\n        this._file = _file;\n        this._promise = this.start();\n    }\n    get file() {\n        return this._file;\n    }\n    get promise() {\n        return this._promise;\n    }\n    start() {\n        return __awaiter(this, void 0, Promise, function* () {\n            // If the destination already exists, make sure its valid.\n            if (!(yield fsExists(this._file))) {\n                throw new Error('Can\\'t launch because the file doesn\\'t exist.');\n            }\n            // Make sure the destination is a file.\n            let stat = yield fsStat(this._file);\n            if (!stat.isFile()) {\n                throw new Error('Can\\'t launch because the file isn\\'t valid.');\n            }\n            // Make sure the file is executable\n            if (process.platform !== 'win32') {\n                let mode = stat.mode;\n                if (!mode) {\n                    throw new Error('Can\\'t determine if the file is executable by the current user.');\n                }\n                let uid = stat.uid;\n                let gid = stat.gid;\n                if (!(mode & parseInt('0001', 8)) &&\n                    !(mode & parseInt('0010', 8)) && process.getgid && gid === process.getgid() &&\n                    !(mode & parseInt('0100', 8)) && process.getuid && uid === process.getuid()) {\n                    // Ensure that the main launcher file is executable.\n                    yield fsChmod(this._file, '0777');\n                }\n            }\n            let launchableFile = path.resolve(process.cwd(), this._file);\n            let child = childProcess.spawn(launchableFile, [], {\n                cwd: path.dirname(launchableFile),\n                detached: true,\n            });\n            let pid = child.pid;\n            child.unref();\n            return pid;\n        });\n    }\n}\nexports.LaunchHandle = LaunchHandle;\n","import * as fs from 'fs';\nimport * as path from 'path';\nimport * as childProcess from 'child_process';\nimport * as _ from 'lodash';\n\nlet Bluebird = require( 'bluebird' );\nlet fsExists = function( path: string ): Promise<boolean>\n{\n\treturn new Promise<boolean>( function( resolve )\n\t{\n\t\tfs.exists( path, resolve );\n\t} );\n}\nlet fsStat:( path: string ) => Promise<fs.Stats> = Bluebird.promisify( fs.stat );\nlet fsChmod:( path: string, mode: string | number ) => Promise<void> = Bluebird.promisify( fs.chmod );\n\nexport abstract class Launcher\n{\n\tstatic launch( file: string ): LaunchHandle\n\t{\n\t\treturn new LaunchHandle( file );\n\t}\n}\n\nexport class LaunchHandle\n{\n\tprivate _promise: Promise<number>;\n\tconstructor( private _file: string )\n\t{\n\t\tthis._promise = this.start();\n\t}\n\n\tget file(): string\n\t{\n\t\treturn this._file;\n\t}\n\n\tget promise(): Promise<number>\n\t{\n\t\treturn this._promise;\n\t}\n\n\tprivate async start()\n\t{\n\t\t// If the destination already exists, make sure its valid.\n\t\tif ( !(await fsExists( this._file ) ) ) {\n\t\t\tthrow new Error( 'Can\\'t launch because the file doesn\\'t exist.' );\n\t\t}\n\n\t\t// Make sure the destination is a file.\n\t\tlet stat = await fsStat( this._file );\n\t\tif ( !stat.isFile() ) {\n\t\t\tthrow new Error( 'Can\\'t launch because the file isn\\'t valid.' );\n\t\t}\n\n\t\t// Make sure the file is executable\n\t\tif ( process.platform !== 'win32' ) { // We dont care about windows. Everything's executable. Have a good day virus makers.\n\t\t\tlet mode = stat.mode;\n\t\t\tif ( !mode ) {\n\t\t\t\tthrow new Error( 'Can\\'t determine if the file is executable by the current user.' );\n\t\t\t}\n\n\t\t\tlet uid = stat.uid;\n\t\t\tlet gid = stat.gid;\n\n\t\t\tif ( !( mode & parseInt( '0001', 8 ) ) &&\n\t\t\t\t\t!( mode & parseInt( '0010', 8 ) ) && process.getgid && gid === process.getgid() &&\n\t\t\t\t\t!( mode & parseInt( '0100', 8 ) ) && process.getuid && uid === process.getuid() ) {\n\n\t\t\t\t// Ensure that the main launcher file is executable.\n\t\t\t\tawait fsChmod( this._file, '0777' );\n\t\t\t}\n\t\t}\n\n\t\tlet launchableFile = path.resolve( process.cwd(), this._file );\n\t\tlet child = childProcess.spawn( launchableFile, [], {\n\t\t\tcwd: path.dirname( launchableFile ),\n\t\t\tdetached: true,\n\t\t} );\n\n\t\tlet pid = child.pid;\n\t\tchild.unref();\n\n\t\treturn pid;\n\t}\n}\n"],"sourceRoot":"../../src/"}