{"version":3,"sources":["patcher/index-spec.js","patcher/index-spec.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,IAAI,SAAS,GAAG,AAAC,aAAQ,UAAK,SAAS,IAAK,UAAU,OAAO,EAAE,UAAU,EAAE,OAAO,EAAE,SAAS,EAAE;AAC3F,WAAO,IAAI,OAAO,CAAC,UAAU,OAAO,EAAE,MAAM,EAAE;AAC1C,iBAAS,GAAG,SAAS,CAAC,IAAI,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;AAChD,iBAAS,IAAI,CAAC,KAAK,EAAE;AAAE,mBAAO,KAAK,YAAY,OAAO,IAAI,KAAK,CAAC,WAAW,KAAK,OAAO,GAAG,KAAK,GAAG,IAAI,OAAO,CAAC,UAAU,OAAO,EAAE;AAAE,uBAAO,CAAC,KAAK,CAAC,CAAC;aAAE,CAAC,CAAC;SAAE;AACxJ,iBAAS,SAAS,CAAC,KAAK,EAAE;AAAE,gBAAI;AAAE,oBAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;aAAE,CAAC,OAAO,CAAC,EAAE;AAAE,sBAAM,CAAC,CAAC,CAAC,CAAC;aAAE;SAAE;AACnF,iBAAS,QAAQ,CAAC,KAAK,EAAE;AAAE,gBAAI;AAAE,oBAAI,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;aAAE,CAAC,OAAO,CAAC,EAAE;AAAE,sBAAM,CAAC,CAAC,CAAC,CAAC;aAAE;SAAE;AACnF,iBAAS,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE;AACvB,gBAAI,MAAM,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC;AACpC,kBAAM,CAAC,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;SACtF;AACD,YAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC;KACxB,CAAC,CAAC;CACN,CAAC;ACZF,IAAO,OAAO,GAAA,OAAA,CAAY,SAAU,CAAC,CAAC;AAGtC,IAAA,cAAA,GAAA,OAAA,CAA2B,4BAA4B,CAAC,CAAA;AACxD,IAAA,OAAA,GAAA,OAAA,CAAwB,SAAS,CAAC,CAAA;AAClC,IAAO,IAAI,GAAA,OAAA,CAAY,MAAO,CAAC,CAAC;AAChC,IAAA,QAAA,GAAA,OAAA,CAAmB,WAAW,CAAC,CAAA;AAC/B,IAAY,GAAG,GAAA,OAAA,CAAM,KAAK,CAAC,CAAA;AAE3B,QAAQ,CAAE,SAAS,EAAE,YAAA;;;AAEpB,QAAI,GAAoB,YAAA,CAAC;AACzB,QAAI,MAAmB,YAAA,CAAC;AACxB,QAAI,KAAK,GAAwB;AAChC,UAAE,EAAE,CAAC;AACL,eAAO,EAAE,CAAC;AACV,cAAM,EAAE,MAAM;AACd,YAAI,EAAE,cAAc;AACpB,eAAO,EAAE;AACR,cAAE,EAAE,CAAC;AACL,iBAAK,EAAE,MAAM;AACb,uBAAW,EAAE,MAAM;SACnB;AACD,eAAO,EAAE;AACR,cAAE,EAAE,CAAC;AACL,0BAAc,EAAE,OAAO;SACvB;AACD,YAAI,EAAE;AACL,cAAE,EAAE,CAAC;AACL,oBAAQ,EAAE,kBAAkB;AAC5B,oBAAQ,EAAE,CAAC;SACX;AACD,oBAAY,EAAE,QAAQ;AACtB,sBAAc,EAAE,CAAE;AACjB,cAAE,EAAE,CAAC;AACL,cAAE,EAAE,OAAO;AACX,2BAAe,EAAE,WAAW;SAC5B,CAAE;AACH,kBAAU,EAAE,KAAK;AACjB,qBAAa,EAAE,KAAK;AACpB,cAAM,EAAE,KAAK;AACb,iBAAS,EAAE,KAAK;AAChB,gBAAQ,EAAE,IAAI;AACd,mBAAW,EAAE,KAAK;AAClB,gBAAQ,EAAE,KAAK;AACf,mBAAW,EAAE,CAAC;AACd,mBAAW,EAAE,IAAI,CAAC,OAAO,CAAE,OAAO,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,IAAI,CAAE,YAAY,EAAE,OAAO,EAAE,aAAa,EAAE,SAAS,CAAE,CAAE;KACxG,CAAA;AAED,QAAI,IAAI,GAAG,SAAP,IAAI,CAAa,MAAc,EAAA;AAElC,eAAO,sBAAmB,UAAE,OAAO;mBAAM,UAAU,CAAE,OAAO,EAAE,MAAM,CAAE;SAAA,CAAE,CAAC;KACzE,CAAC;AAEF,UAAM,CAAE,UAAU,IAAI,EAAA;AAErB,WAAG,GAAG,OAAO,EAAE,CAAC;AAChB,WAAG,CAAC,GAAG,CAAE,OAAO,CAAC,MAAM,CAAE,kBAAkB,CAAE,CAAE,CAAC;AAChD,cAAM,GAAG,GAAG,CAAC,MAAM,CAAE,IAAI,EAAE,YAAA;AAE1B,gBAAI,EAAE,CAAC;SACP,CAAE,CAAC;KACJ,CAAE,CAAC;AAEJ,SAAK,CAAE,UAAU,IAAI,EAAA;AAEpB,cAAM,CAAC,KAAK,CAAE,YAAA;AAEb,gBAAI,EAAE,CAAC;SACP,CAAE,CAAC;AAEJ,WAAG,GAAG,IAAI,CAAC;AACX,cAAM,GAAG,IAAI,CAAC;KACd,CAAE,CAAC;AAEJ,cAAU,CAAE,YAAA;AAEX,eAAO,GAAG,CAAE,qBAAqB,CAAE,CAAC;KACpC,CAAE,CAAC;AAEJ,MAAE,CAAE,aAAa,EAAE;eAAA,SAAA,QAAA,KAAA,CAAA,gDAAA;gBAEd,WAAW;;;;;AAAX,uCAAW,GAAG,OAAA,CAAA,OAAO,CAAC,KAAK,CAAE,oHAAoH,EAAE,KAAK,EAAE;AAC7J,yCAAS,EAAE,IAAI;AACf,oDAAoB,EAAE,KAAK;6BAC3B,CAAE;;AAEH,uCAAW,CACT,aAAa,CAAE,YAAA;AAEf,uCAAO,CAAC,GAAG,CAAE,gBAAgB,CAAE,CAAC;6BAChC,CAAE,CACF,UAAU,CAAE,cAAA,CAAA,UAAU,CAAC,IAAI,EAAE,UAAU,IAAI,EAAA;AAE3C,uCAAO,CAAC,GAAG,CAAE,qBAAqB,GAAG,IAAI,CAAC,KAAK,CAAE,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAE,GAAG,GAAG,CAAE,CAAC;AAC/E,uCAAO,CAAC,GAAG,CAAE,iBAAiB,GAAG,IAAI,CAAC,KAAK,CAAE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAE,GAAG,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,cAAc,GAAG,gCAAgC,GAAG,IAAI,CAAC,KAAK,CAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAE,GAAG,cAAc,GAAG,IAAI,CAAC,KAAK,CAAE,IAAI,CAAC,MAAM,CAAC,GAAG,CAAE,GAAG,aAAa,GAAG,IAAI,CAAC,KAAK,CAAE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAE,GAAG,MAAM,CAAE,CAAC;6BAChS,CAAE,CACF,UAAU,CAAE,YAAA;AAEZ,uCAAO,CAAC,GAAG,CAAE,aAAa,CAAE,CAAC;6BAC7B,CAAE,CACF,KAAK,CAAE,oHAAoH,CAAE,CAAC;6DAEzH,WAAW,CAAC,OAAO;;;;;;;;SAC1B,EAAA;KAAA,CAAE,CAAC;AAEJ,MAAE,CAAE,8CAA8C,EAAE,UAAQ,IAAI;eAAA,SAAA,QAAA,KAAA,CAAA,gDAAA;;;;;;;;;oCAG1D,WAAW;;;;;AAAX,2DAAW,GAAG,OAAA,CAAA,OAAO,CAAC,KAAK,CAAE,oHAAoH,EAAE,KAAK,EAAE;AAC7J,6DAAS,EAAE,IAAI;AACf,wEAAoB,EAAE,KAAK;iDAC3B,CAAE;;AAEH,2DAAW,CACT,aAAa,CAAE,YAAA;ADXJ,2DAAO,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,gDAAW;;;;;ACanD,+EAAO,CAAC,GAAG,CAAE,gBAAgB,CAAE,CAAC;AAChC,+EAAO,CAAC,GAAG,CAAE,YAAY,CAAE,CAAC;;+EACtB,WAAW,CAAC,IAAI,EAAE;;;;+EAClB,IAAI,CAAE,IAAI,CAAE;;;AAClB,+EAAO,CAAC,GAAG,CAAE,aAAa,CAAE,CAAC;;+EACvB,WAAW,CAAC,KAAK,EAAE;;;;;;;;qDACzB,EAAA,CAAA;iDAAA,CAAE,CACF,UAAU,CAAE,cAAA,CAAA,UAAU,CAAC,IAAI,EAAE,UAAU,IAAI,EAAA;AAE3C,2DAAO,CAAC,GAAG,CAAE,qBAAqB,GAAG,IAAI,CAAC,KAAK,CAAE,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAE,GAAG,GAAG,CAAE,CAAC;AAC/E,2DAAO,CAAC,GAAG,CAAE,iBAAiB,GAAG,IAAI,CAAC,KAAK,CAAE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAE,GAAG,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,cAAc,GAAG,gCAAgC,GAAG,IAAI,CAAC,KAAK,CAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAE,GAAG,cAAc,GAAG,IAAI,CAAC,KAAK,CAAE,IAAI,CAAC,MAAM,CAAC,GAAG,CAAE,GAAG,aAAa,GAAG,IAAI,CAAC,KAAK,CAAE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAE,GAAG,MAAM,CAAE,CAAC;iDAChS,CAAE,CACF,UAAU,CAAE,YAAA;AAEZ,2DAAO,CAAC,GAAG,CAAE,aAAa,CAAE,CAAC;iDAC7B,CAAE,CACF,KAAK,CAAE,oHAAoH,CAAE,CAAC;;uDAE1H,WAAW,CAAC,OAAO;;;AACzB,oDAAI,EAAE,CAAC;;;;;;;;;;;;;;;;;;AAGP,gCAAI,cAAO,CAAC;;;;;;;;SAEb,EAAA;KAAA,CAAE,CAAC;AAEJ,MAAE,CAAE,qDAAqD,EAAE,UAAQ,IAAI;eAAA,SAAA,QAAA,KAAA,CAAA,gDAAA;;;;;;;;;oCAGjE,WAAW;;;;;AAAX,2DAAW,GAAG,OAAA,CAAA,OAAO,CAAC,KAAK,CAAE,oHAAoH,EAAE,KAAK,EAAE;AAC7J,6DAAS,EAAE,IAAI;AACf,wEAAoB,EAAE,KAAK;iDAC3B,CAAE;;AAEH,2DAAW,CACT,aAAa,CAAE,YAAA;ADhBJ,2DAAO,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,gDAAW;;;;;ACkBnD,+EAAO,CAAC,GAAG,CAAE,gBAAgB,CAAE,CAAC;;+EAC1B,IAAI,CAAE,IAAI,CAAE;;;AAClB,+EAAO,CAAC,GAAG,CAAE,YAAY,CAAE,CAAC;;+EACtB,WAAW,CAAC,IAAI,EAAE;;;;+EAClB,IAAI,CAAE,IAAI,CAAE;;;AAClB,+EAAO,CAAC,GAAG,CAAE,aAAa,CAAE,CAAC;;+EACvB,WAAW,CAAC,KAAK,EAAE;;;;;;;;qDACzB,EAAA,CAAA;iDAAA,CAAE,CACF,UAAU,CAAE,cAAA,CAAA,UAAU,CAAC,IAAI,EAAE,UAAU,IAAI,EAAA;AAE3C,2DAAO,CAAC,GAAG,CAAE,qBAAqB,GAAG,IAAI,CAAC,KAAK,CAAE,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAE,GAAG,GAAG,CAAE,CAAC;AAC/E,2DAAO,CAAC,GAAG,CAAE,iBAAiB,GAAG,IAAI,CAAC,KAAK,CAAE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAE,GAAG,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,cAAc,GAAG,gCAAgC,GAAG,IAAI,CAAC,KAAK,CAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAE,GAAG,cAAc,GAAG,IAAI,CAAC,KAAK,CAAE,IAAI,CAAC,MAAM,CAAC,GAAG,CAAE,GAAG,aAAa,GAAG,IAAI,CAAC,KAAK,CAAE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAE,GAAG,MAAM,CAAE,CAAC;iDAChS,CAAE,CACF,UAAU,CAAE,YAAA;AAEZ,2DAAO,CAAC,GAAG,CAAE,aAAa,CAAE,CAAC;iDAC7B,CAAE,CACF,KAAK,CAAE,oHAAoH,CAAE,CAAC;;uDAE1H,WAAW,CAAC,OAAO;;;AACzB,oDAAI,EAAE,CAAC;;;;;;;;;;;;;;;;;;AAGP,gCAAI,cAAO,CAAC;;;;;;;;SAEb,EAAA;KAAA,CAAE,CAAC;AAEJ,MAAE,CAAE,2DAA2D,EAAE,UAAQ,IAAI;eAAA,SAAA,QAAA,KAAA,CAAA,gDAAA;;;;;;;;;oCAOvE,WAAW;;;;;AAJf,uDAAO,CAAC,GAAG,CAAE,cAAc,CAAE,CAAC;;uDACxB,QAAA,CAAA,OAAM,CAAC,MAAM,CAAE,KAAK,CAAC,WAAW,CAAE;;;;uDAClC,QAAA,CAAA,OAAM,CAAC,MAAM,CAAE,IAAI,CAAC,IAAI,CAAE,YAAY,EAAE,4BAA4B,CAAE,EAAE,IAAI,CAAC,IAAI,CAAE,KAAK,CAAC,WAAW,EAAE,kBAAkB,CAAE,CAAE;;;AAE9H,2DAAW,GAAG,OAAA,CAAA,OAAO,CAAC,KAAK,CAAE,oHAAoH,EAAE,KAAK,EAAE;AAC7J,6DAAS,EAAE,KAAK;AAChB,wEAAoB,EAAE,KAAK;iDAC3B,CAAE;;AAEH,2DAAW,CACT,aAAa,CAAE,YAAA;AAEf,2DAAO,CAAC,GAAG,CAAE,gBAAgB,CAAE,CAAC;iDAChC,CAAE,CACF,UAAU,CAAE,cAAA,CAAA,UAAU,CAAC,IAAI,EAAE,UAAU,IAAI,EAAA;AAE3C,2DAAO,CAAC,GAAG,CAAE,qBAAqB,GAAG,IAAI,CAAC,KAAK,CAAE,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAE,GAAG,GAAG,CAAE,CAAC;AAC/E,2DAAO,CAAC,GAAG,CAAE,iBAAiB,GAAG,IAAI,CAAC,KAAK,CAAE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAE,GAAG,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,cAAc,GAAG,gCAAgC,GAAG,IAAI,CAAC,KAAK,CAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAE,GAAG,cAAc,GAAG,IAAI,CAAC,KAAK,CAAE,IAAI,CAAC,MAAM,CAAC,GAAG,CAAE,GAAG,aAAa,GAAG,IAAI,CAAC,KAAK,CAAE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAE,GAAG,MAAM,CAAE,CAAC;iDAChS,CAAE,CACF,UAAU,CAAE,YAAA;ADxBD,2DAAO,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,gDAAW;;;;;AC0BnD,+EAAO,CAAC,GAAG,CAAE,aAAa,CAAE,CAAC;AAC7B,+EAAO,CAAC,GAAG,CAAE,YAAY,CAAE,CAAC;;+EACtB,WAAW,CAAC,IAAI,EAAE;;;;+EAClB,IAAI,CAAE,IAAI,CAAE;;;AAClB,+EAAO,CAAC,GAAG,CAAE,aAAa,CAAE,CAAC;;+EACvB,WAAW,CAAC,KAAK,EAAE;;;;;;;;qDACzB,EAAA,CAAA;iDAAA,CAAE,CACF,KAAK,CAAE,oHAAoH,CAAE,CAAC;;uDAE1H,WAAW,CAAC,OAAO;;;AACzB,oDAAI,EAAE,CAAC;;;;;;;;;;;;;;;;;;AAGP,gCAAI,eAAO,CAAC;;;;;;;;SAEb,EAAA;KAAA,CAAE,CAAC;AAEJ,MAAE,CAAE,+DAA+D,EAAE,UAAQ,IAAI;eAAA,SAAA,QAAA,KAAA,CAAA,gDAAA;;;;;;;;;oCAO3E,WAAW;;;;;AAJf,uDAAO,CAAC,GAAG,CAAE,cAAc,CAAE,CAAC;;uDACxB,QAAA,CAAA,OAAM,CAAC,MAAM,CAAE,KAAK,CAAC,WAAW,CAAE;;;;uDAClC,QAAA,CAAA,OAAM,CAAC,MAAM,CAAE,IAAI,CAAC,IAAI,CAAE,YAAY,EAAE,4BAA4B,CAAE,EAAE,IAAI,CAAC,IAAI,CAAE,KAAK,CAAC,WAAW,EAAE,kBAAkB,CAAE,CAAE;;;AAE9H,2DAAW,GAAG,OAAA,CAAA,OAAO,CAAC,KAAK,CAAE,oHAAoH,EAAE,KAAK,EAAE;AAC7J,6DAAS,EAAE,KAAK;AAChB,wEAAoB,EAAE,KAAK;iDAC3B,CAAE;;AAEH,2DAAW,CACT,aAAa,CAAE,YAAA;AAEf,2DAAO,CAAC,GAAG,CAAE,gBAAgB,CAAE,CAAC;iDAChC,CAAE,CACF,UAAU,CAAE,cAAA,CAAA,UAAU,CAAC,IAAI,EAAE,UAAU,IAAI,EAAA;AAE3C,2DAAO,CAAC,GAAG,CAAE,qBAAqB,GAAG,IAAI,CAAC,KAAK,CAAE,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAE,GAAG,GAAG,CAAE,CAAC;AAC/E,2DAAO,CAAC,GAAG,CAAE,iBAAiB,GAAG,IAAI,CAAC,KAAK,CAAE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAE,GAAG,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,cAAc,GAAG,gCAAgC,GAAG,IAAI,CAAC,KAAK,CAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAE,GAAG,cAAc,GAAG,IAAI,CAAC,KAAK,CAAE,IAAI,CAAC,MAAM,CAAC,GAAG,CAAE,GAAG,aAAa,GAAG,IAAI,CAAC,KAAK,CAAE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAE,GAAG,MAAM,CAAE,CAAC;iDAChS,CAAE,CACF,UAAU,CAAE,YAAA;AD9BD,2DAAO,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,gDAAW;;;;;ACgCnD,+EAAO,CAAC,GAAG,CAAE,aAAa,CAAE,CAAC;;+EACvB,IAAI,CAAE,IAAI,CAAE;;;;AAClB,+EAAO,CAAC,GAAG,CAAE,YAAY,CAAE,CAAC;;+EACtB,WAAW,CAAC,IAAI,EAAE;;;;+EAClB,IAAI,CAAE,IAAI,CAAE;;;AAClB,+EAAO,CAAC,GAAG,CAAE,aAAa,CAAE;mFAAC,AACjB,WAAW,CAAC,KAAK,EAAE;AAAC;;;;;;;qDAChC,EAAA,CAAA;iDAAA,CAAE,CACF,KAAK,CAAE,oHAAoH,CAAE,CAAC;;uDAE1H,WAAW,CAAC,OAAO;;;AACzB,oDAAI,EAAE,CAAC;;;;;;;;;;;;;;;;;;AAGP,gCAAI,eAAO,CAAC;;;;;;;;SAEb,EAAA;KAAA,CAAE,CAAC;CACJ,CAAE,CAAC","file":"patcher/index-spec.js","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, Promise, generator) {\n    return new Promise(function (resolve, reject) {\n        generator = generator.call(thisArg, _arguments);\n        function cast(value) { return value instanceof Promise && value.constructor === Promise ? value : new Promise(function (resolve) { resolve(value); }); }\n        function onfulfill(value) { try { step(\"next\", value); } catch (e) { reject(e); } }\n        function onreject(value) { try { step(\"throw\", value); } catch (e) { reject(e); } }\n        function step(verb, value) {\n            var result = generator[verb](value);\n            result.done ? resolve(result.value) : cast(result.value).then(onfulfill, onreject);\n        }\n        step(\"next\", void 0);\n    });\n};\nvar express = require('express');\nvar stream_speed_1 = require('../downloader/stream-speed');\nvar index_1 = require('./index');\nvar path = require('path');\nvar common_1 = require('../common');\nvar del = require('del');\ndescribe('Patcher', function () {\n    let app;\n    let server;\n    let build = {\n        id: 1,\n        game_id: 1,\n        folder: 'test',\n        type: 'downloadable',\n        package: {\n            id: 1,\n            title: 'test',\n            description: 'test',\n        },\n        release: {\n            id: 1,\n            version_number: '1.0.0',\n        },\n        file: {\n            id: 1,\n            filename: 'GJGas.exe.tar.xz',\n            filesize: 1,\n        },\n        archive_type: 'tar.xz',\n        launch_options: [{\n                id: 1,\n                os: 'linux',\n                executable_path: 'GJGas.exe',\n            }],\n        os_windows: false,\n        os_windows_64: false,\n        os_mac: false,\n        os_mac_64: false,\n        os_linux: true,\n        os_linux_64: false,\n        os_other: false,\n        modified_on: 1,\n        install_dir: path.resolve(process.cwd(), path.join('test-files', 'games', 'game-test-1', 'build-1')),\n    };\n    let wait = function (millis) {\n        return new Promise((resolve) => setTimeout(resolve, millis));\n    };\n    before(function (done) {\n        app = express();\n        app.use(express.static('../../test-files'));\n        server = app.listen(1337, function () {\n            done();\n        });\n    });\n    after(function (done) {\n        server.close(function () {\n            done();\n        });\n        app = null;\n        server = null;\n    });\n    beforeEach(() => {\n        return del('test-files/!(.gj-*)');\n    });\n    it('Should work', () => __awaiter(this, void 0, Promise, function* () {\n        let patchHandle = index_1.Patcher.patch('https://s3-us-west-2.amazonaws.com/ylivay-gj-test-oregon/data/games/0/0/52250/files/566973cb4684c/GJGas.exe.tar.xz', build, {\n            overwrite: true,\n            decompressInDownload: false,\n        });\n        patchHandle\n            .onDownloading(function () {\n            console.log('Downloading...');\n        })\n            .onProgress(stream_speed_1.SampleUnit.KBps, function (data) {\n            console.log('Download progress: ' + Math.floor(data.progress * 100) + '%');\n            console.log('Current speed: ' + Math.floor(data.sample.current) + ' kbps (' + data.sample.currentAverage + ' kbps current average), peak: ' + Math.floor(data.sample.peak) + ' kbps, low: ' + Math.floor(data.sample.low) + ', average: ' + Math.floor(data.sample.average) + 'kbps');\n        })\n            .onPatching(function () {\n            console.log('Patching...');\n        })\n            .start('https://s3-us-west-2.amazonaws.com/ylivay-gj-test-oregon/data/games/0/0/52250/files/566973cb4684c/GJGas.exe.tar.xz');\n        return patchHandle.promise;\n    }));\n    it('Should be resumable after pausing right away', (done) => __awaiter(this, void 0, Promise, function* () {\n        try {\n            let patchHandle = index_1.Patcher.patch('https://s3-us-west-2.amazonaws.com/ylivay-gj-test-oregon/data/games/0/0/52250/files/566973cb4684c/GJGas.exe.tar.xz', build, {\n                overwrite: true,\n                decompressInDownload: false,\n            });\n            patchHandle\n                .onDownloading(function () {\n                return __awaiter(this, void 0, Promise, function* () {\n                    console.log('Downloading...');\n                    console.log('Pausing...');\n                    yield patchHandle.stop();\n                    yield wait(5000);\n                    console.log('Resuming...');\n                    yield patchHandle.start();\n                });\n            })\n                .onProgress(stream_speed_1.SampleUnit.KBps, function (data) {\n                console.log('Download progress: ' + Math.floor(data.progress * 100) + '%');\n                console.log('Current speed: ' + Math.floor(data.sample.current) + ' kbps (' + data.sample.currentAverage + ' kbps current average), peak: ' + Math.floor(data.sample.peak) + ' kbps, low: ' + Math.floor(data.sample.low) + ', average: ' + Math.floor(data.sample.average) + 'kbps');\n            })\n                .onPatching(function () {\n                console.log('Patching...');\n            })\n                .start('https://s3-us-west-2.amazonaws.com/ylivay-gj-test-oregon/data/games/0/0/52250/files/566973cb4684c/GJGas.exe.tar.xz');\n            yield patchHandle.promise;\n            done();\n        }\n        catch (err) {\n            done(err);\n        }\n    }));\n    it('Should be resumable after pausing while downloading', (done) => __awaiter(this, void 0, Promise, function* () {\n        try {\n            let patchHandle = index_1.Patcher.patch('https://s3-us-west-2.amazonaws.com/ylivay-gj-test-oregon/data/games/0/0/52250/files/566973cb4684c/GJGas.exe.tar.xz', build, {\n                overwrite: true,\n                decompressInDownload: false,\n            });\n            patchHandle\n                .onDownloading(function () {\n                return __awaiter(this, void 0, Promise, function* () {\n                    console.log('Downloading...');\n                    yield wait(3000);\n                    console.log('Pausing...');\n                    yield patchHandle.stop();\n                    yield wait(5000);\n                    console.log('Resuming...');\n                    yield patchHandle.start();\n                });\n            })\n                .onProgress(stream_speed_1.SampleUnit.KBps, function (data) {\n                console.log('Download progress: ' + Math.floor(data.progress * 100) + '%');\n                console.log('Current speed: ' + Math.floor(data.sample.current) + ' kbps (' + data.sample.currentAverage + ' kbps current average), peak: ' + Math.floor(data.sample.peak) + ' kbps, low: ' + Math.floor(data.sample.low) + ', average: ' + Math.floor(data.sample.average) + 'kbps');\n            })\n                .onPatching(function () {\n                console.log('Patching...');\n            })\n                .start('https://s3-us-west-2.amazonaws.com/ylivay-gj-test-oregon/data/games/0/0/52250/files/566973cb4684c/GJGas.exe.tar.xz');\n            yield patchHandle.promise;\n            done();\n        }\n        catch (err) {\n            done(err);\n        }\n    }));\n    it('Should be resumable after pausing right after downloading', (done) => __awaiter(this, void 0, Promise, function* () {\n        try {\n            console.log('Preparing...');\n            yield common_1.default.mkdirp(build.install_dir);\n            yield common_1.default.fsCopy(path.join('test-files', '.gj-bigTempDownload.tar.xz'), path.join(build.install_dir, '.gj-tempDownload'));\n            let patchHandle = index_1.Patcher.patch('https://s3-us-west-2.amazonaws.com/ylivay-gj-test-oregon/data/games/0/0/52250/files/566973cb4684c/GJGas.exe.tar.xz', build, {\n                overwrite: false,\n                decompressInDownload: false,\n            });\n            patchHandle\n                .onDownloading(function () {\n                console.log('Downloading...');\n            })\n                .onProgress(stream_speed_1.SampleUnit.KBps, function (data) {\n                console.log('Download progress: ' + Math.floor(data.progress * 100) + '%');\n                console.log('Current speed: ' + Math.floor(data.sample.current) + ' kbps (' + data.sample.currentAverage + ' kbps current average), peak: ' + Math.floor(data.sample.peak) + ' kbps, low: ' + Math.floor(data.sample.low) + ', average: ' + Math.floor(data.sample.average) + 'kbps');\n            })\n                .onPatching(function () {\n                return __awaiter(this, void 0, Promise, function* () {\n                    console.log('Patching...');\n                    console.log('Pausing...');\n                    yield patchHandle.stop();\n                    yield wait(5000);\n                    console.log('Resuming...');\n                    yield patchHandle.start();\n                });\n            })\n                .start('https://s3-us-west-2.amazonaws.com/ylivay-gj-test-oregon/data/games/0/0/52250/files/566973cb4684c/GJGas.exe.tar.xz');\n            yield patchHandle.promise;\n            done();\n        }\n        catch (err) {\n            done(err);\n        }\n    }));\n    it('Should be resumable after pausing in the middle of extracting', (done) => __awaiter(this, void 0, Promise, function* () {\n        try {\n            console.log('Preparing...');\n            yield common_1.default.mkdirp(build.install_dir);\n            yield common_1.default.fsCopy(path.join('test-files', '.gj-bigTempDownload.tar.xz'), path.join(build.install_dir, '.gj-tempDownload'));\n            let patchHandle = index_1.Patcher.patch('https://s3-us-west-2.amazonaws.com/ylivay-gj-test-oregon/data/games/0/0/52250/files/566973cb4684c/GJGas.exe.tar.xz', build, {\n                overwrite: false,\n                decompressInDownload: false,\n            });\n            patchHandle\n                .onDownloading(function () {\n                console.log('Downloading...');\n            })\n                .onProgress(stream_speed_1.SampleUnit.KBps, function (data) {\n                console.log('Download progress: ' + Math.floor(data.progress * 100) + '%');\n                console.log('Current speed: ' + Math.floor(data.sample.current) + ' kbps (' + data.sample.currentAverage + ' kbps current average), peak: ' + Math.floor(data.sample.peak) + ' kbps, low: ' + Math.floor(data.sample.low) + ', average: ' + Math.floor(data.sample.average) + 'kbps');\n            })\n                .onPatching(function () {\n                return __awaiter(this, void 0, Promise, function* () {\n                    console.log('Patching...');\n                    yield wait(1000); // Might fail if the extraction finishes really fast. HMMM.\n                    console.log('Pausing...');\n                    yield patchHandle.stop();\n                    yield wait(5000);\n                    console.log('Resuming...');\n                    /* await */ patchHandle.start(); // Dont await here before that makes you wait for the whole extraction to finish.\n                });\n            })\n                .start('https://s3-us-west-2.amazonaws.com/ylivay-gj-test-oregon/data/games/0/0/52250/files/566973cb4684c/GJGas.exe.tar.xz');\n            yield patchHandle.promise;\n            done();\n        }\n        catch (err) {\n            done(err);\n        }\n    }));\n});\n","import express = require( 'express' );\nimport http = require( 'http' );\nimport { Downloader } from '../downloader';\nimport { SampleUnit } from '../downloader/stream-speed';\nimport { Patcher } from './index';\nimport path = require( 'path' );\nimport Common from '../common';\nimport * as del from 'del';\n\ndescribe( 'Patcher', function()\n{\n\tlet app: express.Express;\n\tlet server: http.Server;\n\tlet build: GameJolt.IGameBuild = {\n\t\tid: 1,\n\t\tgame_id: 1,\n\t\tfolder: 'test',\n\t\ttype: 'downloadable', // downloadable, html, flash, silverlight, unity, applet\n\t\tpackage: {\n\t\t\tid: 1,\n\t\t\ttitle: 'test',\n\t\t\tdescription: 'test',\n\t\t},\n\t\trelease: {\n\t\t\tid: 1,\n\t\t\tversion_number: '1.0.0',\n\t\t},\n\t\tfile: {\n\t\t\tid: 1,\n\t\t\tfilename: 'GJGas.exe.tar.xz',\n\t\t\tfilesize: 1,\n\t\t},\n\t\tarchive_type: 'tar.xz',\n\t\tlaunch_options: [ {\n\t\t\tid: 1,\n\t\t\tos: 'linux',\n\t\t\texecutable_path: 'GJGas.exe',\n\t\t} ],\n\t\tos_windows: false,\n\t\tos_windows_64: false,\n\t\tos_mac: false,\n\t\tos_mac_64: false,\n\t\tos_linux: true,\n\t\tos_linux_64: false,\n\t\tos_other: false,\n\t\tmodified_on: 1,\n\t\tinstall_dir: path.resolve( process.cwd(), path.join( 'test-files', 'games', 'game-test-1', 'build-1' ) ),\n\t}\n\n\tlet wait = function( millis: number )\n\t{\n\t\treturn new Promise<void>( ( resolve ) => setTimeout( resolve, millis ) );\n\t};\n\n\tbefore( function( done )\n\t{\n\t\tapp = express();\n\t\tapp.use( express.static( '../../test-files' ) );\n\t\tserver = app.listen( 1337, function()\n\t\t{\n\t\t\tdone();\n\t\t} );\n\t} );\n\n\tafter( function( done )\n\t{\n\t\tserver.close( function()\n\t\t{\n\t\t\tdone();\n\t\t} );\n\n\t\tapp = null;\n\t\tserver = null;\n\t} );\n\n\tbeforeEach( () =>\n\t{\n\t\treturn del( 'test-files/!(.gj-*)' );\n\t} );\n\n\tit( 'Should work', async () =>\n\t{\n\t\tlet patchHandle = Patcher.patch( 'https://s3-us-west-2.amazonaws.com/ylivay-gj-test-oregon/data/games/0/0/52250/files/566973cb4684c/GJGas.exe.tar.xz', build, {\n\t\t\toverwrite: true,\n\t\t\tdecompressInDownload: false,\n\t\t} );\n\n\t\tpatchHandle\n\t\t\t.onDownloading( function()\n\t\t\t{\n\t\t\t\tconsole.log( 'Downloading...' );\n\t\t\t} )\n\t\t\t.onProgress( SampleUnit.KBps, function( data )\n\t\t\t{\n\t\t\t\tconsole.log( 'Download progress: ' + Math.floor( data.progress * 100 ) + '%' );\n\t\t\t\tconsole.log( 'Current speed: ' + Math.floor( data.sample.current ) + ' kbps (' + data.sample.currentAverage + ' kbps current average), peak: ' + Math.floor( data.sample.peak ) + ' kbps, low: ' + Math.floor( data.sample.low ) + ', average: ' + Math.floor( data.sample.average ) + 'kbps' );\n\t\t\t} )\n\t\t\t.onPatching( function()\n\t\t\t{\n\t\t\t\tconsole.log( 'Patching...' );\n\t\t\t} )\n\t\t\t.start( 'https://s3-us-west-2.amazonaws.com/ylivay-gj-test-oregon/data/games/0/0/52250/files/566973cb4684c/GJGas.exe.tar.xz' );\n\n\t\treturn patchHandle.promise;\n\t} );\n\n\tit( 'Should be resumable after pausing right away', async ( done ) =>\n\t{\n\t\ttry {\n\t\t\tlet patchHandle = Patcher.patch( 'https://s3-us-west-2.amazonaws.com/ylivay-gj-test-oregon/data/games/0/0/52250/files/566973cb4684c/GJGas.exe.tar.xz', build, {\n\t\t\t\toverwrite: true,\n\t\t\t\tdecompressInDownload: false,\n\t\t\t} );\n\n\t\t\tpatchHandle\n\t\t\t\t.onDownloading( async function()\n\t\t\t\t{\n\t\t\t\t\tconsole.log( 'Downloading...' );\n\t\t\t\t\tconsole.log( 'Pausing...' );\n\t\t\t\t\tawait patchHandle.stop();\n\t\t\t\t\tawait wait( 5000 );\n\t\t\t\t\tconsole.log( 'Resuming...' );\n\t\t\t\t\tawait patchHandle.start();\n\t\t\t\t} )\n\t\t\t\t.onProgress( SampleUnit.KBps, function( data )\n\t\t\t\t{\n\t\t\t\t\tconsole.log( 'Download progress: ' + Math.floor( data.progress * 100 ) + '%' );\n\t\t\t\t\tconsole.log( 'Current speed: ' + Math.floor( data.sample.current ) + ' kbps (' + data.sample.currentAverage + ' kbps current average), peak: ' + Math.floor( data.sample.peak ) + ' kbps, low: ' + Math.floor( data.sample.low ) + ', average: ' + Math.floor( data.sample.average ) + 'kbps' );\n\t\t\t\t} )\n\t\t\t\t.onPatching( function()\n\t\t\t\t{\n\t\t\t\t\tconsole.log( 'Patching...' );\n\t\t\t\t} )\n\t\t\t\t.start( 'https://s3-us-west-2.amazonaws.com/ylivay-gj-test-oregon/data/games/0/0/52250/files/566973cb4684c/GJGas.exe.tar.xz' );\n\n\t\t\tawait patchHandle.promise;\n\t\t\tdone();\n\t\t}\n\t\tcatch ( err ) {\n\t\t\tdone( err );\n\t\t}\n\t} );\n\n\tit( 'Should be resumable after pausing while downloading', async ( done ) =>\n\t{\n\t\ttry {\n\t\t\tlet patchHandle = Patcher.patch( 'https://s3-us-west-2.amazonaws.com/ylivay-gj-test-oregon/data/games/0/0/52250/files/566973cb4684c/GJGas.exe.tar.xz', build, {\n\t\t\t\toverwrite: true,\n\t\t\t\tdecompressInDownload: false,\n\t\t\t} );\n\n\t\t\tpatchHandle\n\t\t\t\t.onDownloading( async function()\n\t\t\t\t{\n\t\t\t\t\tconsole.log( 'Downloading...' );\n\t\t\t\t\tawait wait( 3000 );\n\t\t\t\t\tconsole.log( 'Pausing...' );\n\t\t\t\t\tawait patchHandle.stop();\n\t\t\t\t\tawait wait( 5000 );\n\t\t\t\t\tconsole.log( 'Resuming...' );\n\t\t\t\t\tawait patchHandle.start();\n\t\t\t\t} )\n\t\t\t\t.onProgress( SampleUnit.KBps, function( data )\n\t\t\t\t{\n\t\t\t\t\tconsole.log( 'Download progress: ' + Math.floor( data.progress * 100 ) + '%' );\n\t\t\t\t\tconsole.log( 'Current speed: ' + Math.floor( data.sample.current ) + ' kbps (' + data.sample.currentAverage + ' kbps current average), peak: ' + Math.floor( data.sample.peak ) + ' kbps, low: ' + Math.floor( data.sample.low ) + ', average: ' + Math.floor( data.sample.average ) + 'kbps' );\n\t\t\t\t} )\n\t\t\t\t.onPatching( function()\n\t\t\t\t{\n\t\t\t\t\tconsole.log( 'Patching...' );\n\t\t\t\t} )\n\t\t\t\t.start( 'https://s3-us-west-2.amazonaws.com/ylivay-gj-test-oregon/data/games/0/0/52250/files/566973cb4684c/GJGas.exe.tar.xz' );\n\n\t\t\tawait patchHandle.promise;\n\t\t\tdone();\n\t\t}\n\t\tcatch ( err ) {\n\t\t\tdone( err );\n\t\t}\n\t} );\n\n\tit( 'Should be resumable after pausing right after downloading', async ( done ) =>\n\t{\n\t\ttry {\n\t\t\tconsole.log( 'Preparing...' );\n\t\t\tawait Common.mkdirp( build.install_dir );\n\t\t\tawait Common.fsCopy( path.join( 'test-files', '.gj-bigTempDownload.tar.xz' ), path.join( build.install_dir, '.gj-tempDownload' ) );\n\n\t\t\tlet patchHandle = Patcher.patch( 'https://s3-us-west-2.amazonaws.com/ylivay-gj-test-oregon/data/games/0/0/52250/files/566973cb4684c/GJGas.exe.tar.xz', build, {\n\t\t\t\toverwrite: false, // false because im tricking patcher into thinking it already downloaded a hugeass file.\n\t\t\t\tdecompressInDownload: false,\n\t\t\t} );\n\n\t\t\tpatchHandle\n\t\t\t\t.onDownloading( function()\n\t\t\t\t{\n\t\t\t\t\tconsole.log( 'Downloading...' );\n\t\t\t\t} )\n\t\t\t\t.onProgress( SampleUnit.KBps, function( data )\n\t\t\t\t{\n\t\t\t\t\tconsole.log( 'Download progress: ' + Math.floor( data.progress * 100 ) + '%' );\n\t\t\t\t\tconsole.log( 'Current speed: ' + Math.floor( data.sample.current ) + ' kbps (' + data.sample.currentAverage + ' kbps current average), peak: ' + Math.floor( data.sample.peak ) + ' kbps, low: ' + Math.floor( data.sample.low ) + ', average: ' + Math.floor( data.sample.average ) + 'kbps' );\n\t\t\t\t} )\n\t\t\t\t.onPatching( async function()\n\t\t\t\t{\n\t\t\t\t\tconsole.log( 'Patching...' );\n\t\t\t\t\tconsole.log( 'Pausing...' );\n\t\t\t\t\tawait patchHandle.stop();\n\t\t\t\t\tawait wait( 5000 );\n\t\t\t\t\tconsole.log( 'Resuming...' );\n\t\t\t\t\tawait patchHandle.start();\n\t\t\t\t} )\n\t\t\t\t.start( 'https://s3-us-west-2.amazonaws.com/ylivay-gj-test-oregon/data/games/0/0/52250/files/566973cb4684c/GJGas.exe.tar.xz' );\n\n\t\t\tawait patchHandle.promise;\n\t\t\tdone();\n\t\t}\n\t\tcatch ( err ) {\n\t\t\tdone( err );\n\t\t}\n\t} );\n\n\tit( 'Should be resumable after pausing in the middle of extracting', async ( done ) =>\n\t{\n\t\ttry {\n\t\t\tconsole.log( 'Preparing...' );\n\t\t\tawait Common.mkdirp( build.install_dir );\n\t\t\tawait Common.fsCopy( path.join( 'test-files', '.gj-bigTempDownload.tar.xz' ), path.join( build.install_dir, '.gj-tempDownload' ) );\n\n\t\t\tlet patchHandle = Patcher.patch( 'https://s3-us-west-2.amazonaws.com/ylivay-gj-test-oregon/data/games/0/0/52250/files/566973cb4684c/GJGas.exe.tar.xz', build, {\n\t\t\t\toverwrite: false, // false because im tricking patcher into thinking it already downloaded a hugeass file.\n\t\t\t\tdecompressInDownload: false,\n\t\t\t} );\n\n\t\t\tpatchHandle\n\t\t\t\t.onDownloading( function()\n\t\t\t\t{\n\t\t\t\t\tconsole.log( 'Downloading...' );\n\t\t\t\t} )\n\t\t\t\t.onProgress( SampleUnit.KBps, function( data )\n\t\t\t\t{\n\t\t\t\t\tconsole.log( 'Download progress: ' + Math.floor( data.progress * 100 ) + '%' );\n\t\t\t\t\tconsole.log( 'Current speed: ' + Math.floor( data.sample.current ) + ' kbps (' + data.sample.currentAverage + ' kbps current average), peak: ' + Math.floor( data.sample.peak ) + ' kbps, low: ' + Math.floor( data.sample.low ) + ', average: ' + Math.floor( data.sample.average ) + 'kbps' );\n\t\t\t\t} )\n\t\t\t\t.onPatching( async function()\n\t\t\t\t{\n\t\t\t\t\tconsole.log( 'Patching...' );\n\t\t\t\t\tawait wait( 1000 ); // Might fail if the extraction finishes really fast. HMMM.\n\t\t\t\t\tconsole.log( 'Pausing...' );\n\t\t\t\t\tawait patchHandle.stop();\n\t\t\t\t\tawait wait( 5000 );\n\t\t\t\t\tconsole.log( 'Resuming...' );\n\t\t\t\t\t/* await */ patchHandle.start(); // Dont await here before that makes you wait for the whole extraction to finish.\n\t\t\t\t} )\n\t\t\t\t.start( 'https://s3-us-west-2.amazonaws.com/ylivay-gj-test-oregon/data/games/0/0/52250/files/566973cb4684c/GJGas.exe.tar.xz' );\n\n\t\t\tawait patchHandle.promise;\n\t\t\tdone();\n\t\t}\n\t\tcatch ( err ) {\n\t\t\tdone( err );\n\t\t}\n\t} );\n} );"],"sourceRoot":"../../src/"}